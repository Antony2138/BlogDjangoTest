# Generated by Django 5.1.1 on 2024-10-09 23:02

import datetime
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AppointmentRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('id_request', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot_duration', models.PositiveIntegerField(help_text='Minimum time for an appointment in minutes, recommended 30.', null=True)),
                ('lead_time', models.TimeField(help_text='Time when we start working.', null=True)),
                ('finish_time', models.TimeField(help_text='Time when we stop working.', null=True)),
                ('appointment_buffer_time', models.FloatField(help_text="Time between now and the first available slot for the current day (doesn't affect tomorrow).", null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
                ('duration', models.DurationField(validators=[django.core.validators.MinValueValidator(datetime.timedelta(seconds=1))])),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', models.DecimalField(decimal_places=2, max_digits=8)),
                ('id_request', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('appointment_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='appointment.appointmentrequest')),
            ],
        ),
        migrations.AddField(
            model_name='appointmentrequest',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointment.service'),
        ),
        migrations.CreateModel(
            name='StaffMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot_duration', models.PositiveIntegerField(blank=True, help_text='Minimum time for an appointment in minutes, recommended 30.', null=True)),
                ('lead_time', models.TimeField(blank=True, help_text='Time when the staff member starts working.', null=True)),
                ('finish_time', models.TimeField(blank=True, help_text='Time when the staff member stops working.', null=True)),
                ('appointment_buffer_time', models.FloatField(blank=True, help_text="Time between now and the first available slot for the current day (doesn't affect tomorrow). e.g: If you start working at 9:00 AM and the current time is 8:30 AM and you set it to 30 minutes, the first available slot will be at 9:00 AM. If you set the appointment buffer time to 60 minutes, the first available slot will be at 9:30 AM.", null=True)),
                ('services_offered', models.ManyToManyField(to='appointment.service')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='appointmentrequest',
            name='staff_member',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='appointment.staffmember'),
        ),
        migrations.CreateModel(
            name='WorkingHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.PositiveIntegerField(choices=[(0, 'Sunday'), (1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('staff_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointment.staffmember')),
            ],
        ),
    ]
